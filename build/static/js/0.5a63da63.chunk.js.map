{"version":3,"sources":["components/Auth/AuthFormStyled.js","components/Auth/AuthForm.js","pages/AuthPage.js"],"names":["AuthFormStyled","styled","form","initialState","name","email","password","AuthForm","state","onHandleChange","event","target","value","setState","onHandleSubmit","preventDefault","props","location","pathname","registerOperation","loginOperation","this","autoComplete","onSubmit","type","placeholder","pattern","title","required","onChange","minLength","Component","connect","withRouter","AuthPage"],"mappings":"kPA6BeA,E,MA3BQC,EAAOC,KAAV,+c,OCQdC,EAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAEhDC,E,4MACJC,M,eACKL,G,EAGLM,eAAiB,SAAAC,GACf,MAAwBA,EAAMC,OAAtBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBT,EAAOQ,K,EAG1BE,eAAiB,SAAAJ,GACfA,EAAMK,iBACN,MAA4B,EAAKP,MAAzBH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAEkB,cAAjC,EAAKU,MAAMC,SAASC,SAChB,EAAKF,MAAMG,kBAAkB,EAAKX,OAClC,EAAKQ,MAAMI,eAAe,CAAEf,QAAOC,aACvC,EAAKO,SAAL,eAAmBV,K,4CAGrB,WACE,MAAkCkB,KAAKb,MAA/BJ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SACbY,EAAaG,KAAKL,MAAMC,SAAxBC,SACR,OACE,eAAC,EAAD,CAAgBI,aAAa,MAAMC,SAAUF,KAAKP,eAAlD,UACgB,cAAbI,GACC,yCAEE,uBACEM,KAAK,OACLpB,KAAK,OACLqB,YAAY,aACZH,aAAa,KACbI,QAAQ,wHACRC,MAAM,kcACNC,UAAQ,EACRhB,MAAOR,EACPyB,SAAUR,KAAKZ,oBAIrB,0CAEE,uBACEe,KAAK,OACLpB,KAAK,QACLqB,YAAY,mBACZH,aAAa,KACbM,UAAQ,EACRhB,MAAOP,EACPwB,SAAUR,KAAKZ,oBAGnB,6CAEE,uBACEe,KAAK,OACLpB,KAAK,WACLqB,YAAY,iBACZK,UAAU,IACVR,aAAa,KACbM,UAAQ,EACRhB,MAAON,EACPuB,SAAUR,KAAKZ,oBAGnB,wBAAQe,KAAK,SAAb,SACgB,cAAbN,EAA2B,WAAa,iB,GAnE5Ba,aA0ERC,cAAQ,KAAM,CAAEb,sBAAmBC,oBAAnCY,CACbC,YAAW1B,IChFE2B,UAJE,WACf,OAAO,cAAC,EAAD","file":"static/js/0.5a63da63.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst AuthFormStyled = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin: 10px;\n  padding: 20px;\n  border: 2px solid black;\n  border-radius: 6px;\n\n  label {\n    margin-bottom: 20px;\n  }\n  input {\n    width: 300px;\n    margin-bottom: 10px;\n    margin-left: 5px;\n    padding: 5px;\n    border-color: teal;\n    border-radius: 5px;\n  }\n  button {\n    border-radius: 5px;\n    cursor: pointer;\n    padding: 5px;\n  }\n`;\n\nexport default AuthFormStyled;\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  loginOperation,\r\n  registerOperation,\r\n} from '../../redux/auth/authOperations';\r\nimport AuthFormStyled from './AuthFormStyled';\r\n\r\nconst initialState = { name: '', email: '', password: '' };\r\n\r\nclass AuthForm extends Component {\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  onHandleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = event => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n\r\n    this.props.location.pathname === '/register'\r\n      ? this.props.registerOperation(this.state)\r\n      : this.props.loginOperation({ email, password });\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n    const { pathname } = this.props.location;\r\n    return (\r\n      <AuthFormStyled autoComplete=\"off\" onSubmit={this.onHandleSubmit}>\r\n        {pathname === '/register' && (\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Enter name\"\r\n              autoComplete=\"on\"\r\n              pattern=\"^[A-ZA-ZА-ЯА-Я]+(([' -][A-ZA-ZА-ЯА-Я])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={name}\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n        )}\r\n        <label>\r\n          Email\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"blabla@gmail.com\"\r\n            autoComplete=\"on\"\r\n            required\r\n            value={email}\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Password\r\n          <input\r\n            type=\"text\"\r\n            name=\"password\"\r\n            placeholder=\"Enter password\"\r\n            minLength=\"5\"\r\n            autoComplete=\"on\"\r\n            required\r\n            value={password}\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">\r\n          {pathname === '/register' ? 'Register' : 'Login'}\r\n        </button>\r\n      </AuthFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { registerOperation, loginOperation })(\r\n  withRouter(AuthForm),\r\n);\r\n","import React from 'react';\r\nimport AuthForm from '../components/Auth/AuthForm';\r\n\r\nconst AuthPage = () => {\r\n  return <AuthForm />;\r\n};\r\n\r\nexport default AuthPage;\r\n"],"sourceRoot":""}