{"version":3,"sources":["components/Section/SectionStyled.js","components/Section/Section.js","components/Admin/AdvForm.Styled.js","redux/contacts/contactsSelector.js","components/Admin/AdvForm.js","redux/contacts/contactsOperations.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/ContactsList/ContactsListItem/ContactsListItemStyled.js","components/ContactsList/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","pages/ContactsPage.js"],"names":["SectionStyled","styled","section","Section","children","title","className","toUpperCase","AdvFormStyled","div","getContacts","state","items","contacts","getFilters","filter","getLoadings","loading","getContactsFiltered","createSelector","contact","name","toLowerCase","includes","initialState","number","AdvForm","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","props","find","alert","addContactOperations","this","fetchContactsOperations","onSubmit","type","pattern","required","onChange","Component","connect","dispatch","getState","a","fetchContactsRequest","axios","get","headers","Authorization","auth","idToken","data","fetchContactsSuccess","fetchContactsError","message","addContactRequest","post","addContactSuccess","addContactError","FilterStyled","changeFilter","ContactsListItemStyled","deleteContactOperation","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","onClick","map","ContactsPage"],"mappings":"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","file":"static/js/4.76994834.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const SectionStyled = styled.section`\r\n  font-size: 20px;\r\n  .sectionTitle {\r\n    color: teal;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    margin: 10px auto;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { SectionStyled } from './SectionStyled';\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title.toUpperCase()}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import styled from 'styled-components';\r\n\r\nexport const AdvFormStyled = styled.div`\r\n  padding: 20px 10px;\r\n  margin: 10px;\r\n  border: 2px solid;\r\n  .inputName {\r\n    width: 300px;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n    \r\n  }\r\n  .btnAdd {\r\n    display: block;\r\n    margin-top: 30px;\r\n    padding: 3px 5px;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    &:hover {\r\n      background-color: teal;\r\n    }\r\n  }\r\n`;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.items.contacts;\r\nexport const getFilters = state => state.items.filter;\r\nexport const getLoadings = state => state.items.loading;\r\n\r\nexport const getContactsFiltered = createSelector(\r\n  [getContacts, getFilters],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n","import React, { Component } from 'react';\r\nimport { AdvFormStyled } from './AdvForm.Styled';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addContactOperations,\r\n  fetchContactsOperations,\r\n} from '../../redux/contacts/contactsOperations';\r\nimport { getContacts } from '../../redux/contacts/contactsSelector';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\nclass AdvForm extends Component {\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContactsOperations();\r\n  }\r\n  onHandleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const sameContactName = this.props.contacts.find(\r\n      contact => contact.name.toLowerCase() === this.state.name.toLowerCase(),\r\n    );\r\n    if (sameContactName) {\r\n      return alert(`${this.state.name} is already in contacts.`);\r\n    }\r\n\r\n    this.props.addContactOperations({\r\n      ...this.state,\r\n    });\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <AdvFormStyled>\r\n        <form onSubmit={this.onHandleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              className=\"inputName\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[A-ZA-ZА-ЯА-Я]+(([' -][A-ZA-ZА-ЯА-Я])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={name}\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              className=\"inputName\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"btnAdd\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </AdvFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchContactsOperations,\r\n  addContactOperations,\r\n})(AdvForm);\r\n","import axios from 'axios';\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n} from './contactsAction';\r\n\r\nexport const fetchContactsOperations = () => async (dispatch, getState) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts', {\r\n      headers: { Authorization: `Bearer ${getState().auth.idToken}` },\r\n    });\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContactOperations = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteContactOperation = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error.message));\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const FilterStyled = styled.div`\r\n  margin-left: 10px;\r\n  .inputFilter {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { FilterStyled } from './FilterStyled';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contactsAction';\r\nimport { getFilters } from '../../redux/contacts/contactsSelector';\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  const onChange = e => {\r\n    changeFilter(e.target.value);\r\n  };\r\n  return (\r\n    <FilterStyled>\r\n      <label className=\"labelFilter\">\r\n        Find contacts by name:\r\n        <input\r\n          className=\"inputFilter\"\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: getFilters(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { changeFilter })(Filter);\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactsListItemStyled = styled.div`\r\npadding-left: 30px;\r\nlist-style:cursor;\r\n  .btnDelete {\r\n    padding: 2px;\r\n    margin: 5px 10px;\r\n    border-radius: 6px;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: tomato;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContactOperation } from '../../../redux/contacts/contactsOperations';\r\nimport { ContactsListItemStyled } from './ContactsListItemStyled';\r\n\r\nconst ContactsListItem = ({ name, number, id, deleteContactOperation }) => {\r\n  const onDeleteItem = () => {\r\n    deleteContactOperation(id);\r\n  };\r\n\r\n  return (\r\n    <ContactsListItemStyled>\r\n      <li>\r\n        {name}\r\n        <span>: </span>\r\n        {number}\r\n        <button className=\"btnDelete\" type=\"button\" onClick={onDeleteItem}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </ContactsListItemStyled>\r\n  );\r\n};\r\n\r\nexport default connect(null, { deleteContactOperation })(ContactsListItem);\r\n","import React from 'react';\r\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getContactsFiltered,\r\n  getLoadings,\r\n} from '../../redux/contacts/contactsSelector';\r\nimport { AppLoader } from '../Loader/Loader';\r\n\r\nconst ContactsList = ({ contacts, loading }) => {\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <>\r\n          <AppLoader />\r\n          <h2>Loading Contacts...</h2>\r\n        </>\r\n      ) : (\r\n        <ul>\r\n          {contacts.map(contact => (\r\n            <ContactsListItem key={contact.id} {...contact} id={contact.id} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContactsFiltered(state),\r\n  loading: getLoadings(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactsList);\r\n","import React from 'react';\r\nimport AdvForm from '../components/Admin/AdvForm';\r\nimport Filter from '../components/Filter/Filter';\r\nimport ContactsList from '../components/ContactsList/ContactsList';\r\nimport Section from '../components/Section/Section';\r\n\r\nconst ContactsPage = () => {\r\n  return (\r\n    <Section title=''>\r\n      <AdvForm />\r\n      <Filter />\r\n      <ContactsList />\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"sourceRoot":""}