{"version":3,"sources":["components/Admin/AdvForm.Styled.js","redux/contacts/contactsAction.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelector.js","components/Admin/AdvForm.js","components/ContactsList/ContactsListItem/ContactsListItemStyled.js","components/ContactsList/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/Section/SectionStyled.js","components/Section/Section.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["AdvFormStyled","styled","div","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getContacts","state","contacts","getFilters","filter","getLoadings","loading","getContactsFiltered","createSelector","contact","name","toLowerCase","includes","initialState","number","AdvForm","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","props","find","alert","addContactOperations","this","fetchContactsOperations","onSubmit","className","type","pattern","title","required","onChange","Component","connect","dispatch","a","get","data","Object","keys","map","key","id","post","ContactsListItemStyled","deleteContactOperation","delete","onClick","FilterStyled","SectionStyled","section","Section","children","toUpperCase","App","contactsItemReducer","createReducer","_","payload","error","filterReducer","contactsReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88006cd1.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const AdvFormStyled = styled.div`\r\n  padding: 20px 10px;\r\n  margin: 10px;\r\n  border: 2px solid;\r\n  width: 400px;\r\n  .inputName {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n  }\r\n  .btnAdd {\r\n    display: block;\r\n    margin-top: 30px;\r\n    padding: 3px 5px;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    &:hover {\r\n      background-color: teal;\r\n    }\r\n  }\r\n`;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest =');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n} from './contactsAction';\r\n\r\naxios.defaults.baseURL = 'https://shopreact-296b9-default-rtdb.firebaseio.com/';\r\nexport const fetchContactsOperations = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts.json');\r\n    if (data)\r\n      dispatch(\r\n        fetchContactsSuccess(\r\n          Object.keys(data).map(key => ({\r\n            id: key,\r\n            ...data[key],\r\n          })),\r\n        ),\r\n      );\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\nexport const addContactOperations = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await axios.post('/contacts.json', contact);\r\n    dispatch(addContactSuccess({ id: data.name, ...contact }));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContactOperation = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}.json`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\n// axios.defaults.baseURL = 'http://localhost:4040';\r\n\r\n// export const fetchContactsOperations = () => async dispatch => {\r\n//   dispatch(fetchContactsRequest());\r\n//   try {\r\n//     const { data } = await axios.get('/contacts');\r\n//     dispatch(fetchContactsSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(fetchContactsError(error));\r\n//   }\r\n// };\r\n// export const addContactOperations = contact => async dispatch => {\r\n//   dispatch(addContactRequest());\r\n//   try {\r\n//     const { data } = await axios.post('contacts', contact);\r\n//     dispatch(addContactSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(addContactError(error));\r\n//   }\r\n// };\r\n\r\n// export const deleteContactOperation = id => async dispatch => {\r\n//   dispatch(deleteContactRequest());\r\n//   try {\r\n//     await axios.delete(`/contacts/${id}`);\r\n//     dispatch(deleteContactSuccess(id));\r\n//   } catch (error) {\r\n//     dispatch(deleteContactError(error));\r\n//   }\r\n// };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts;\r\nexport const getFilters = state => state.filter;\r\nexport const getLoadings = state => state.loading;\r\n\r\nexport const getContactsFiltered = createSelector(\r\n  [getContacts, getFilters],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n","import React, { Component } from 'react';\r\nimport { AdvFormStyled } from './AdvForm.Styled';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addContactOperations,\r\n  fetchContactsOperations,\r\n} from '../../redux/contacts/contactsOperations';\r\nimport { getContacts } from '../../redux/contacts/contactsSelector';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\nclass AdvForm extends Component {\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContactsOperations();\r\n  }\r\n  onHandleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const sameContactName = this.props.contacts.find(\r\n      contact => contact.name.toLowerCase() === this.state.name.toLowerCase(),\r\n    );\r\n    if (sameContactName) {\r\n      return alert(`${this.state.name} is already in contacts.`);\r\n    }\r\n\r\n    this.props.addContactOperations({\r\n      ...this.state,\r\n    });\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <AdvFormStyled>\r\n        <form onSubmit={this.onHandleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              className=\"inputName\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[A-ZA-ZА-ЯА-Я]+(([' -][A-ZA-ZА-ЯА-Я])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={name}\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              className=\"inputName\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"btnAdd\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </AdvFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchContactsOperations,\r\n  addContactOperations,\r\n})(AdvForm);\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactsListItemStyled = styled.div`\r\n  .btnDelete {\r\n    padding: 2px;\r\n    margin: 5px 10px;\r\n    border-radius: 6px;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: tomato;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContactOperation } from '../../../redux/contacts/contactsOperations';\r\nimport { ContactsListItemStyled } from './ContactsListItemStyled';\r\n\r\nconst ContactsListItem = ({ name, number, id, deleteContactOperation }) => {\r\n  const onDeleteItem = () => {\r\n    deleteContactOperation(id);\r\n  };\r\n\r\n  return (\r\n    <ContactsListItemStyled>\r\n      <li>\r\n        {name}\r\n        <span>: </span>\r\n        {number}\r\n        <button className=\"btnDelete\" type=\"button\" onClick={onDeleteItem}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </ContactsListItemStyled>\r\n  );\r\n};\r\n\r\nexport default connect(null, { deleteContactOperation })(ContactsListItem);\r\n","import React from 'react';\r\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getContactsFiltered,\r\n  getLoadings,\r\n} from '../../redux/contacts/contactsSelector';\r\n\r\nconst ContactsList = ({ contacts, loading }) => {\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h2>Loading Contacts...</h2>\r\n      ) : (\r\n        <ul>\r\n          {contacts.map(contact => (\r\n            <ContactsListItem key={contact.id} {...contact} id={contact.id} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContactsFiltered(state),\r\n  loading: getLoadings(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactsList);\r\n","import styled from 'styled-components';\r\n\r\nexport const FilterStyled = styled.div`\r\n  margin-left: 10px;\r\n  .inputFilter {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { FilterStyled } from './FilterStyled';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contactsAction';\r\nimport { getFilters } from '../../redux/contacts/contactsSelector';\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  const onChange = e => {\r\n    changeFilter(e.target.value);\r\n  };\r\n  return (\r\n    <FilterStyled>\r\n      <label className=\"labelFilter\">\r\n        Find contacts by name:\r\n        <input\r\n          className=\"inputFilter\"\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: getFilters(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { changeFilter })(Filter);\r\n","import styled from 'styled-components';\r\n\r\nexport const SectionStyled = styled.section`\r\n  .sectionTitle {\r\n    color: teal;\r\n    margin: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { SectionStyled } from './SectionStyled';\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title.toUpperCase()}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nimport AdvForm from './Admin/AdvForm';\r\nimport ContactsList from './ContactsList/ContactsList';\r\nimport Filter from './Filter/Filter';\r\nimport Section from './Section/Section';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Section title=\"Phonebook\">\r\n        <AdvForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactsList />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  changeFilter,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n} from './contactsAction';\r\n\r\nconst contactsItemReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst error = createReducer('', {\r\n  [fetchContactsRequest]: () => '',\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactRequest]: () => '',\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactRequest]: () => '',\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  contacts: contactsItemReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n  error,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: contactsReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}