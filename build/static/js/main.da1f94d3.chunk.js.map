{"version":3,"sources":["redux/auth/authSelector.js","routes/mainRoutes.js","components/Navigation/NavigationItem/NavigationItem.js","components/Navigation/NavigationStyled.js","components/Navigation/Navigation.js","components/UserMenu/UserMenuStyled.js","components/UserMenu/UserMenu.js","components/Header/HeaderStyled.js","components/Header/Header.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/Main/Main.js","components/App.js","redux/contacts/contactsReducer.js","redux/auth/authReducer.js","redux/rootReducer.js","redux/store.js","index.js","redux/auth/authOperations.js","components/Loader/Loader.js","redux/auth/authActions.js","redux/contacts/contactsAction.js"],"names":["getIsAuth","state","auth","idToken","getUserName","name","mainRoutes","path","component","lazy","exact","isPrivate","restricted","NavigationItem","isAuth","className","activeClassName","to","toUpperCase","NavigationContainer","styled","nav","connect","map","route","key","UserMenuStyled","div","username","logOutOperation","type","onClick","HeaderContainer","header","PrivateRoute","PublicRoute","fallback","App","prevProps","this","props","currentUserOperation","Component","contactsItemReducer","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","deleteContactSuccess","filter","id","error","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","loading","filterReducer","changeFilter","contactsReducer","combineReducers","contacts","authReducer","email","registerSuccess","user","token","loginSuccess","logOutSuccess","getCurrentUserSuccess","registerError","loginError","logOutError","getCurrentUserError","persistConfig","storage","whitelist","rootReducer","items","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistStore","ReactDOM","render","document","getElementById","axios","defaults","baseURL","headers","common","registerOperation","dispatch","a","registerRequest","post","data","message","loginOperation","loginRequest","logOutRequest","getState","getCurrentUserRequest","get","response","AppLoader","color","height","width","timeout","createAction"],"mappings":"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","file":"static/js/main.da1f94d3.chunk.js","sourcesContent":["export const getIsAuth = (state) => state.auth.idToken;\nexport const getUserName = (state) => state.auth.name;\n","import { lazy } from 'react';\r\n\r\nexport const mainRoutes = [\r\n  {\r\n    name: 'Home',\r\n    path: '/',\r\n    component: lazy(\r\n      () => import('../pages/HomePage') /*webpackChunkName: 'HomePage'*/,\r\n    ),\r\n    exact: true,\r\n    isPrivate: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    name: 'Contacts',\r\n    path: '/contacts',\r\n    component: lazy(\r\n      () =>\r\n        import('../pages/ContactsPage') /*webpackChunkName: 'ContactsPage'*/,\r\n    ),\r\n    exact: true,\r\n    isPrivate: true,\r\n    restricted: false,\r\n  },\r\n  {\r\n    name: 'Register',\r\n    path: '/register',\r\n    component: lazy(\r\n      () => import('../pages/AuthPage') /*webpackChunkName: 'AuthPage'*/,\r\n    ),\r\n    exact: true,\r\n    isPrivate: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    name: 'Login',\r\n    path: '/login',\r\n    component: lazy(\r\n      () => import('../pages/AuthPage') /*webpackChunkName: 'AuthPage'*/,\r\n    ),\r\n    exact: true,\r\n    isPrivate: false,\r\n    restricted: true,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nconst NavigationItem = ({\r\n  path,\r\n  exact,\r\n  name,\r\n  isPrivate,\r\n  restricted,\r\n  isAuth,\r\n}) => {\r\n  return (\r\n    <>\r\n      {!isPrivate && !restricted && (\r\n        <li className=\"navItem\" key={path}>\r\n          <NavLink\r\n            className=\"navLink\"\r\n            activeClassName=\"navLinkActive\"\r\n            to={path}\r\n            exact={exact}\r\n          >\r\n            {name.toUpperCase()}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n      {isPrivate && !restricted && isAuth && (\r\n        <li className=\"navItem\" key={path}>\r\n          <NavLink\r\n            className=\"navLink\"\r\n            activeClassName=\"navLinkActive\"\r\n            to={path}\r\n            exact={exact}\r\n          >\r\n            {name.toUpperCase()}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n      {!isPrivate && restricted && !isAuth && (\r\n        <li className=\"navItem\" key={path}>\r\n          <NavLink\r\n            className=\"navLink\"\r\n            activeClassName=\"navLinkActive\"\r\n            to={path}\r\n            exact={exact}\r\n          >\r\n            {name.toUpperCase()}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavigationItem;\r\n","import styled from 'styled-components';\r\nexport const NavigationContainer = styled.nav`\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  .navList {\r\n    display: flex;\r\n    list-style: none;\r\n  }\r\n  .navItem {\r\n    margin-right: 20px;\r\n  }\r\n  .navLink {\r\n    color: white;\r\n    text-decoration: none;\r\n  }\r\n  .navLinkActive {\r\n    border-bottom: 2px solid;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuth } from '../../redux/auth/authSelector';\r\nimport { mainRoutes } from '../../routes/mainRoutes';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport { NavigationContainer } from './NavigationStyled';\r\n\r\nconst Navigation = ({isAuth}) => {\r\n  return (\r\n    <NavigationContainer>\r\n      <ul className=\"navList\">\r\n        {mainRoutes.map(route => (\r\n          <NavigationItem {...route} key={route.path} isAuth={isAuth}/>\r\n        ))}\r\n      </ul>\r\n    </NavigationContainer>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuth: getIsAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import styled from 'styled-components';\r\n\r\nexport const UserMenuStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  margin-left: auto;\r\n  .text {\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    color: #f1e7f3;\r\n  }\r\n  button {\r\n    margin-left: 10px;\r\n    font-size: 14px;\r\n    padding: 10px;\r\n    font-weight: 700;\r\n    color: #6d92c2;\r\n    border: none;\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n    box-shadow: 0px 1px 13px 0px #696665;\r\n    cursor: pointer;\r\n  }\r\n  button:hover,\r\n  :focus {\r\n    color: #c7c1c1;\r\n    box-shadow: 0px 1px 13px 0px #e9d8d9;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logOutOperation } from '../../redux/auth/authOperations';\r\nimport { getUserName } from '../../redux/auth/authSelector';\r\nimport { UserMenuStyled } from './UserMenuStyled';\r\n\r\nconst UserMenu = ({ username, logOutOperation }) => {\r\n  return (\r\n    <UserMenuStyled>\r\n      <p className=\"text\">\r\n        Welcome, <span className=\"\">{username}</span>\r\n      </p>\r\n      <button className=\"\" type=\"button\" onClick={logOutOperation}>\r\n        Logout\r\n      </button>\r\n    </UserMenuStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  username: getUserName(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { logOutOperation })(UserMenu);\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderContainer = styled.header`\r\n  height: 60px;\r\n  background-color: #49494c;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuth } from '../../redux/auth/authSelector';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport { HeaderContainer } from './HeaderStyled';\r\n\r\nconst Header = ({ isAuth}) => {\r\n  return (\r\n    <HeaderContainer>\r\n      <Navigation />\r\n      {isAuth && <UserMenu />}\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: getIsAuth(state),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ isAuth, path, component, exact }) => {\r\n  return !isAuth ? (\r\n    <Redirect to=\"/register\" />\r\n  ) : (\r\n    <Route path={path} exact={exact} component={component} />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({ isAuth, path, component, exact, restricted }) => {\r\n  return isAuth && restricted ? (\r\n    <Redirect to=\"/contacts\" />\r\n  ) : (\r\n    <Route path={path} exact={exact} component={component} />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport { getIsAuth } from '../../redux/auth/authSelector';\r\nimport { mainRoutes } from '../../routes/mainRoutes';\r\nimport PrivateRoute from '../../routes/PrivateRoute';\r\nimport PublicRoute from '../../routes/PublicRoute';\r\nimport { AppLoader } from '../Loader/Loader';\r\n\r\nconst Main = ({ isAuth }) => {\r\n  return (\r\n    <Suspense fallback={<AppLoader />}>\r\n      <Switch>\r\n        {mainRoutes.map(({ isPrivate, path, exact, component, restricted }) =>\r\n          isPrivate ? (\r\n            <PrivateRoute\r\n              path={path}\r\n              exact={exact}\r\n              component={component}\r\n              key={path}\r\n              isAuth={isAuth}\r\n            />\r\n          ) : (\r\n            <PublicRoute\r\n              path={path}\r\n              exact={exact}\r\n              component={component}\r\n              key={path}\r\n              isAuth={isAuth}\r\n              restricted={restricted}\r\n            />\r\n          ),\r\n        )}\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: getIsAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { currentUserOperation } from '../redux/auth/authOperations';\r\nimport { getIsAuth } from '../redux/auth/authSelector';\r\nimport Header from './Header/Header';\r\nimport Main from './Main/Main';\r\n\r\nclass App extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.idToken) {\r\n      if (prevProps.idToken !== this.props.idToken) {\r\n        this.props.currentUserOperation();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Main />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  idToken: getIsAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { currentUserOperation })(App);\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  changeFilter,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n} from './contactsAction';\r\n\r\nconst contactsItemReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst error = createReducer('', {\r\n  [fetchContactsRequest]: () => '',\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactRequest]: () => '',\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactRequest]: () => '',\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  contacts: contactsItemReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n  error,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  getCurrentUserError,\r\n  getCurrentUserSuccess,\r\n  loginError,\r\n  loginSuccess,\r\n  logOutError,\r\n  logOutSuccess,\r\n  registerError,\r\n  registerSuccess,\r\n} from './authActions';\r\n\r\nconst authReducer = createReducer(\r\n  {\r\n    name: '',\r\n    email: '',\r\n    idToken: '',\r\n    error: '',\r\n  },\r\n  {\r\n    [registerSuccess]: (_, { payload }) => ({\r\n      name: payload.user.name,\r\n      email: payload.user.email,\r\n      idToken: payload.token,\r\n    }),\r\n\r\n    [loginSuccess]: (_, { payload }) => ({\r\n      name: payload.user.name,\r\n      email: payload.user.email,\r\n      idToken: payload.token,\r\n    }),\r\n\r\n    [logOutSuccess]: () => ({\r\n      name: '',\r\n      email: '',\r\n      idToken: '',\r\n    }),\r\n\r\n    [getCurrentUserSuccess]: (state, { payload }) => ({ ...state, ...payload }),\r\n\r\n    [registerError]: (_, { payload }) => ({\r\n      error: payload,\r\n    }),\r\n    [loginError]: (_, { payload }) => ({\r\n      error: payload,\r\n    }),\r\n    [logOutError]: (_, { payload }) => ({\r\n      error: payload,\r\n    }),\r\n    [getCurrentUserError]: (_, { payload }) => ({\r\n      error: payload,\r\n    }),\r\n  },\r\n);\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['idToken'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  items: contactsReducer,\r\n  auth: persistReducer(persistConfig, authReducer),\r\n});\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { persistStore } from 'redux-persist';\r\nimport rootReducer from './rootReducer';\r\n\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n});\r\n\r\npersistStore(store);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","import axios from 'axios';\r\nimport {\r\n  getCurrentUserError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  loginError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  logOutError,\r\n  logOutRequest,\r\n  logOutSuccess,\r\n  registerError,\r\n  registerRequest,\r\n  registerSuccess,\r\n} from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set: token => {\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  },\r\n  unset: () => {\r\n    axios.defaults.headers.common['Authorization'] = '';\r\n  },\r\n};\r\n\r\nexport const registerOperation = user => async dispatch => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/signup', {\r\n      ...user,\r\n    });\r\n    token.set(data.token);\r\n    dispatch(registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nexport const loginOperation = user => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/login', {\r\n      ...user,\r\n    });\r\n    token.set(data.token);\r\n    dispatch(loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\nexport const logOutOperation = user => async dispatch => {\r\n  dispatch(logOutRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/logout', user);\r\n\r\n    token.unset();\r\n    dispatch(logOutSuccess(data));\r\n  } catch (error) {\r\n    dispatch(logOutError(error.message));\r\n  }\r\n};\r\n\r\nexport const currentUserOperation = () => async (dispatch, getState) => {\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  token.set(getState().auth.idToken);\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport const AppLoader = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Circles\"\r\n      color=\"#636571\"\r\n      height={40}\r\n      width={40}\r\n      timeout={5000}\r\n      className=\"loader\"\r\n    />\r\n  );\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logOutRequest = createAction('auth/logOutRequest');\r\nexport const logOutSuccess = createAction('auth/logOutSuccess');\r\nexport const logOutError = createAction('auth/logOutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest =');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n"],"sourceRoot":""}